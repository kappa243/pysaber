import numpy as np

from pysaber.poly import gen_matrix, gen_secret, matrix_mul
from pysaber.rng import randombytes
from pysaber.saber_params import (SABER_L, SABER_N, SABER_NOISE_SEEDBYTES,
                                  SABER_SEEDBYTES)
from tests.common import rng_init


def test_gen_matrix():

    rng_init()

    A = np.zeros((SABER_L, SABER_L, SABER_N), dtype=np.uint16)
    seed_A = bytearray(SABER_SEEDBYTES)

    randombytes(seed_A, SABER_SEEDBYTES)

    gen_matrix(A, seed_A)

    result = ""
    for i in range(SABER_L):
        for j in range(SABER_L):
            for k in range(SABER_N):
                result += f"{A[i][j][k]:02x}"

    assert (
        result
        == ""
    )


def test_gen_secret():

    rng_init()

    s = np.zeros((SABER_L, SABER_N), dtype=np.uint16)
    seed_s = bytearray(SABER_NOISE_SEEDBYTES)

    randombytes(seed_s, SABER_NOISE_SEEDBYTES)

    gen_secret(s, seed_s)

    result = ""
    for i in range(SABER_L):
        for j in range(SABER_N):
            result += f"{s[i][j]:02x}"

    assert (
        result
        == "03000001010000010001fffffffefffe01000100ffff00000001fffdffff0203000000020003ffff01fffd0102fffefffe000201ffff0102010002fffe000101ffff01ffffffff0100000000020200fffdfffffffe0101ffff02fffffffe02ffff000101fffefffefffffffefffffffe01ffff00fffffffe010100ffff00ffff00020000fffd01ffff01fffdffff01010000010100010101ffff01ffff0200fffffffe010000ffff0000ffff0101010100ffff0101ffffffff00ffff000102ffff03ffffffff000000fffefffeffff0200fffeffff01020200fffd0101030200ffffffff00fffe00010101020200fffd0100ffff0101ffff03fffe000001ffff00fffffffffffe010000fffc00ffff0201fffffffe0001fffe0103fffe00ffffffff0002ffff0000fffffffd01010101000102020000ffff0100010000fffffffefffffffffffefffd00fffffffeffff0003ffff01fffdffff000101ffff00010100000200010200000201fffe0003ffffffffffff00ffff0300ffffffff010000fffe000100010202fffe00fffefffe00ffff0002000200fffe0100fffeffff000301000101fffe00fffc01fffffffffffefffffffe000100fffe00ffffffff020001ffff00010100010002fffdffff00000001fffe0000fffe0001000101fffffffd000002ffff0100ffff01fffe01ffffffff0300fffeffff01ffffffff000001010000ffff00ffff00fffffffffffe0000fffeffff0100ffffffff01fffffffe02ffffffff010101000002ffff0001fffd00fffe000200ffffffffffffffff01010000000001fffefffe0101fffe00fffffffe01ffff020001fffffffe01ffff01ffffffffffff0103ffff00ffff01ffff00fffefffdffff01ffff000001ffff01010001ffffffff0202fffe010201ffff00010301fffd02fffffffeffffffffffff020301010101020001fffffffffffd020100ffff0002fffe00fffefffe0001ffff010200fffe02fffe00ffff03fffffffffffe02ffff0101fffd020004010100fffffffffffffffffffe000201020102020101ffff0000fffefffffffe00ffffffff01000002fffeffffffff00ffff0301fffefffe0201ffff0300fffe01ffff0002020101fffffffdffff0000ffffffff02010100000000ffffffffffffffff03000102ffffffff0203000001010001fffe00fffe030101fffffffffffd000100fffffffe0000000102fffe0101ffff01fffe02020100020201fffe0000000002fffd03000000ffff00ffff010203fffffffeffffffff02ffffffffffffffff0100fffe0001ffff010101fffeffff03ffff00fffe0201ffffffff00ffff02ffff0101fffe0202fffc0002ffffffff0000fffffffd02fffd00ffff01fffd000101fffe0001fffd00ffff0202ffffffff01fffffffeffff00ffff0000fffffffdffffffff01fffe020203ffff01fffe010001fffefffffffffffeffff02fffe00ffff"
    )


def test_matrix_mul():

    rng_init()

    A = np.zeros((SABER_L, SABER_L, SABER_N), dtype=np.uint16)
    s = np.zeros((SABER_L, SABER_N), dtype=np.uint16)
    b = np.zeros((SABER_L, SABER_N), dtype=np.uint16)

    seed_A = bytearray(SABER_SEEDBYTES)
    seed_s = bytearray(SABER_NOISE_SEEDBYTES)

    randombytes(seed_A, SABER_SEEDBYTES)
    randombytes(seed_s, SABER_NOISE_SEEDBYTES)

    gen_matrix(A, seed_A)
    gen_secret(s, seed_s)

    matrix_mul(A, s, b, 1)

    result = ""
    for i in range(SABER_L):
        for j in range(SABER_N):
            result += f"{b[i][j]:02x}"

    assert (
        result
        == "c13f9e80d029a4bcf20c43633963fc103c78e1f4e8eb9625b364e5e74385395e2b73ca5632db71ca891587ce46c14b6f01fec75953e8341359e9d496b6328b6e6efed3a9e0f65c5607dc4956478e6e7f71cfc76b63daba60ab03c902a30fd54e8c0c4b9b178f6218520466a349a064bd5b755e847fd3f3055e83203cff64af53ac95e1cd18f505fe371e69bb3ec4fd270a3cb729f3260976432ddc428dd37257a1fcad766ca660230b81c62b7b7f84d50ea4df611758d19d2667e6645ea539ee8b70110737862969586f71af8c465d750b6f7de3f114211c05b9c785aff1822591cd4d2c9eabbe85aa56ed39fdc13e8d15a0bf921a5174753a779b75e72ef4662ccd31f82f0bc31639dfef66df5e77abc2a6214dba85d81219b5dab7bf2b13e3838103a2c92ac5ee899bc8c1dbfb6a755fa16bfedec6acb503f574aff14c8cf79f5d812a0c2c12ae6a1e85a4dfd970d24cb7f8ee82264ae00ea0c0b07536b3beae3005a4d1b3aeeae380dbb381a8c67e60deb8bd45e3687cc6ab63c96db441b36513967525fcf2e1727bf2cda6bfacb5e81bac42c96ad920fcedbd45d874ddc961941792fbe8b2dceb2931102d65c18006c9c1130933d5c2f902bf6e7eab25b35357c4cef338e3d4bce86a81499fe5ce857b6bd44b72c3f56cfb85868c33d135b135a5d45474c5d9e1b8a8b79fa65dfd005695914cd7dab4225b7175e6c0d4350e922d8af2d41e3f8dfd2ec6a6599b98593ebfe50541259a62a9d9eded80e3741054598bdcc5ee85221fa79e345b1510fb2f59e05716ea5b6914061229c400328fe2a762f5b270f35617144ba10cecb94ca75470c1294d5eaaa2c378c17118a77f3fdbec9021d6fe941ce4627ce4b43e1727ae652884bf9aae829ee53cb39582d1f6b951caad22787208f3829f813b381b2228c78c0e792103b2eefbe246ae3f5359c082644995f02f4108f4818914befabfd17f5950e358387eab4dc42349eca062399b39f4d8b8953d64ef6dceb2679eadf2c9612038f4c17849253a460c1e766027d3fb2743e9eb0bc3690ea689ea25c94e55ff8fea20a52c6e5867d98a2d42909d4971632a7be8fce2940d5282189fe94ae5ce124ba24e348ecba8231089afa255e2863edf282b45c9991e93ce1006e7e5a80a707d8047d7d0c5076bbfa0317d65da1a13f4a43a3576b782b682dcad51cd5a9af6425031fd53976b4095d4c7e7ecb18cd615bf5e1c661c459b1387e2adb487cfbfd1cf7ca637e12d95e9219c1679b28760e8741f3a9b96d779ee850d6f2453bc6223dda1dbabbe23549c5840420aa47ac370b26812f69c6c96ef0bae4d75d3c6576dd7f823f2df16d90f86ecb327cc65376a3e65fe5419380d1534789cddef24324a6081a2c65f23a17f95583d50a155ada20c413c4d646c203ac717a33962210e682a79abbacb95fbee7a967c7b9ac91718cc38e8f6f5e0f4fd3549154149b5a78ed7d819857ab9337f93098f29e5ebf3267bcd2c47f92fb70b562d5ec12bb3fddd34fd45f93d930a2341154e33db850e14e10101a69ea957c23e97163a451618a9f5ae71670db4c7ad3a270d59d6a8c092198abce6391cf97a155da033ca891552aae7f25256777ce39acc42e79822595f0536d8ca7230893b2861cf0db18df86bc9fcd68898c9977aade372666d585a2520117a9953d3cb586c2ccac2e9f92ceb6dc88268a11b490a7442f35c049900576237f07a1f1c70d389b2d408271fd8ef197eda984fc9563b479aa880db1aeaad71d943d4aed2ab7cd35a871c73bf4968e6c3c3a32f839d8b0eccd94702137e60acac04fe8f50b401179fb2ed020ef85d6310c178fd21157f38a80cf4f264ea985bcf9ec87ccdd5b1f4e5ea37de22fddcc99ad2f7b688c06d45b96e0fcb77b750e9cbed81b7ee7cc750faae132e0a3df7964373c3654a767146d86e7ef8ea6fdad58ca32d8a10618ee48011762b9e303de6447071c06db230e9df0eca56719f3efa122867f2541aff0cd67e7ad7a5fc9bb48b8bc71ae9cb2c730cdfbe38895c9ff9acfa68a90947fe89f7a2284379b19192e5bf023b4f171e5ea16649d4708d33f79ff2405e28a7c98a9c8d7c1b76e918599dd4175dbb9ad651b8"
    )
